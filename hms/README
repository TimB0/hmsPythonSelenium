
SETUP
=====


ABOUT THE CODE
==============

This is a proof of concept (POC) project, to show how Python's object-oriented features could be used
to create a test framework, along with Selenium, about HMS Admin console.

The implementation drives to provide a Page Object Model structure.
For this a base page is being provided from which some general functions are being inherited,
for example the start and open methods.
Beside those, a couple of Selenium-related methods are there in the base class, to enable getting
webElements by type, to send keys, to click on webElements and so on.

Another important aspect of the Page Object Model is how to get and how to pass around the webdriver.
In our case it is obtained in the Driver_Factory class. Later on it is the actual test, which is calling it,
creating a driver object.
The next step using the Page_Factory class, which is simply creating different 'pages' (actually page objects)
based on the name of the page.
After this, the test can call methods on that page - like calling the login() method on the login page object.



 The browser type is determined by supplying short name like 'chrome' or 'ff' or 'firefox'.
    The tests call the Driver_Factory class. Currently only local drivers are available.
    After obtaining a driver object, we call the Page_Factory class, which return a required page object.